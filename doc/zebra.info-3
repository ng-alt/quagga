This is zebra.info, produced by makeinfo version 4.0 from zebra.texi.

INFO-DIR-SECTION Routing Software
START-INFO-DIR-ENTRY
* Zebra: (zebra).		The GNU Zebra routing software.
END-INFO-DIR-ENTRY

   This file documents the GNU Zebra software which manages common
TCP/IP routing protocols.

   This is Edition 0.1, last updated 5 July 2000 of `The GNU Zebra
Manual', for Zebra Version 0.88.

   Copyright (C) 1999, 2000 Kunihiro Ishiguro

   Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

   Permission is granted to copy and distribute modified versions of
this manual under the conditions for verbatim copying, provided that the
entire resulting derived work is distributed under the terms of a
permission notice identical to this one.

   Permission is granted to copy and distribute translations of this
manual into another language, under the above conditions for modified
versions, except that this permission notice may be stated in a
translation approved by Kunihiro Ishiguro.


File: zebra.info,  Node: Router Advertisement,  Prev: IPv6 Supports,  Up: IPv6 Supports

Router Advertisement
====================

 - Interface Command: ipv6 nd send-ra

 - Interface Command: ipv6 nd prefix-advertisement IPV6PREFIX

     interface eth0
      ipv6 nd send-ra
      ipv6 nd prefix-advertisement 3ffe:506:5009::/64


File: zebra.info,  Node: Kernel Interface,  Next: SNMP Support,  Prev: IPv6 Supports,  Up: Top

Kernel Interface
****************

   There are several different methods for reading kernel routing table
information, updating kernel routing tables, and for looking up
interfaces.

`ioctl'
     The `ioctl' method is a very traditional way for reading or writing
     kernel information.  `ioctl' can be used for looking up interfaces
     and for modifying interface addresses, flags, mtu settings and
     other types of information.  Also, `ioctl' can insert and delete
     kernel routing table entries.  It will soon be available on almost
     any platform which zebra supports, but it is a little bit ugly
     thus far, so if a better method is supported by the kernel zebra
     will use that.

`sysctl'
     `sysctl' can lookup kernel information using MIB (Management
     Information Base) syntax.  Normally, it only provides a way of
     getting information from the kernel.  So one would usually want to
     change kernel information using another method such as `ioctl'.

`proc filesystem'
     `proc filesystem' provides an easy way of getting kernel
     information.

`routing socket'

`netlink'
     On recent Linux kernels (2.0.x and 2.2.x), there is a kernel/user
     communication support called `netlink'.  It makes asynchronous
     communication between kernel and Zebra possible, similar to a
     routing socket on BSD systems.

     Before you use this feature, be sure to select the kernel/netlink
     support option 'Kernel/User network link driver' and 'Routing
     messages'.

     Today, the /dev/route special device file is obsolete.  Netlink
     communication is done by reading/writing over netlink socket.

     After the kernel configuration, please reconfigure and rebuild
     Zebra.  You can use netlink as a dynamic routing update channel
     between Zebra and the kernel.


File: zebra.info,  Node: SNMP Support,  Next: Zebra Protocol,  Prev: Kernel Interface,  Up: Top

SNMP Support
************

   SNMP (Simple Network Managing Protocol) is widely implemented feature
for collecting network information from router and/or host.  Zebra
itself does not support SNMP agent functionality.  But conjuction with
SNMP agent, Zebra provides routing protocol MIBs.

   Zebra uses SMUX protocol (RFC1227) for making communication with SNMP
agent.  There are several SNMP agent which support SMUX.  We recommend
to use the latest `ucd-snmp' software.

* Menu:

* How to get ucd-snmp::
* SMUX configuration::


File: zebra.info,  Node: How to get ucd-snmp,  Next: SMUX configuration,  Prev: SNMP Support,  Up: SNMP Support

How to get ucd-snmp
===================

   ucd-snmp is a free software which distributed so called "as is"
software license.  Please check the license which comes with
distribution of `ucd-snmp'.  The authors of ucd-snmp are the University
of California, the University of California at Davis, and the Electrical
Engineering department at the University of California at Davis.

   You can get ucd-snmp from <ftp://ucd-smp.ucdavis.edu/>.  As of this
writing we are testing with `ucd-snmp-4.1.pre1.tar.gz'.

   To enable SMUX protocol support, please configure `ucd-snmp' like
below.

     % configure --with-mib-modules=smux

   After compile and install `ucd-snmp', you will need to configure
smuxpeer.  I'm now using below configuration.  This means SMUX client
connect under MIB 1.3.6.1.6.3.1 with password test.

     /usr/local/share/snmp/snmpd.conf
     ================================
     smuxpeer 1.3.6.1.6.3.1 test


File: zebra.info,  Node: SMUX configuration,  Prev: How to get ucd-snmp,  Up: SNMP Support

SMUX configuration
==================

   To enable SNMP support of Zebra, you have to configure Zebra with
`--enable-snmp' (*note Configure the Software::).

 - Command: smux peer OID
 - Command: no smux peer OID

 - Command: smux peer OID PASSWORD
 - Command: no smux peer OID PASSWORD

     !
     smux peer .1.3.6.1.6.3.1 test
     !


File: zebra.info,  Node: Zebra Protocol,  Next: Packet Binary Dump Format,  Prev: SNMP Support,  Up: Top

Zebra Protocol
**************

   Zebra Protocol is a protocol which used between protocol daemon and
zebra.  Each protocol daemon send selected routes to zebra dameon.  Then
zebra manages which route is intalled into forwarding table.

   Zebra Protocol is a TCP based protocol.  Below is common header of
Zebra Protocol.

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           Length (2)          |   Command (1) |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Length is total packet length including this header length.  So
minimum length is three.  Command is Zebra Protocol command.

     ZEBRA_INTERFACE_ADD                1
     ZEBRA_INTERFACE_DELETE             2
     ZEBRA_INTERFACE_ADDRESS_ADD        3
     ZEBRA_INTERFACE_ADDRESS_DELETE     4
     ZEBRA_INTERFACE_UP                 5
     ZEBRA_INTERFACE_DOWN               6
     ZEBRA_IPV4_ROUTE_ADD               7
     ZEBRA_IPV4_ROUTE_DELETE            8
     ZEBRA_IPV6_ROUTE_ADD               9
     ZEBRA_IPV6_ROUTE_DELETE           10
     ZEBRA_REDISTRIBUTE_ADD            11
     ZEBRA_REDISTRIBUTE_DELETE         12
     ZEBRA_REDISTRIBUTE_DEFAULT_ADD    13
     ZEBRA_REDISTRIBUTE_DEFAULT_DELETE 14
     ZEBRA_IPV4_NEXTHOP_LOOKUP         15
     ZEBRA_IPV6_NEXTHOP_LOOKUP         16

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             Type              |             Flags             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+


File: zebra.info,  Node: Packet Binary Dump Format,  Next: Command Index,  Prev: Zebra Protocol,  Up: Top

Packet Binary Dump Format
*************************

   Zebra can dump routing protocol packet into file with binary format
(*note Dump BGP packet and table::).

   It seems to be better that we share the MRT's header format for
backward compatibility of the MRT's dump logs. We should also define the
binary format excluding the header, because we must support both of IP
v4/v6 addresses as socket addresses and / or routing entries.

   In the last meeting, we discussed to have a version field in the
header. But, Masaki told us that we can define new `type' value rather
than having a `version' field, and it seems to be better because we
don't need to change header format.

   Here is the common header format. This is same as that of MRT.

     0                   1                   2                   3
     0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                              Time                             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |             Type              |            Subtype            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                             Length                            |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   If `type' is PROTOCOL_BGP4MP, `subtype' is BGP4MP_STATE_CHANGE, and
Address Family == IP (version 4)

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Source AS number       |     Destination AS number     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Interface Index        |      Address Family           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address                      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |            Old State          |           New State           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Where State is the value defined in RFC1771.

   If `type' is PROTOCOL_BGP4MP, `subtype' is BGP4MP_STATE_CHANGE, and
Address Family == IP version 6

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Source AS number       |     Destination AS number     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Interface Index        |      Address Family           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address                      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address (Cont'd)             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address (Cont'd)             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address (Cont'd)             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address (Cont'd)           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address (Cont'd)           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address (Cont'd)           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |            Old State          |           New State           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   If `type' is PROTOCOL_BGP4MP, `subtype' is BGP4MP_MESSAGE, and
Address Family == IP (version 4)

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Source AS number       |     Destination AS number     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Interface Index        |      Address Family           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address                      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                       BGP Message Packet                      |
     |                                                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   Where BGP Message Packet is the whole contents of the BGP4 message
including header portion.

   If `type' is PROTOCOL_BGP4MP, `subtype' is BGP4MP_MESSAGE, and
Address Family == IP version 6

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Source AS number       |     Destination AS number     |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |        Interface Index        |      Address Family           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address                      |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address (Cont'd)             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address (Cont'd)             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Source IP address (Cont'd)             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address                    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address (Cont'd)           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address (Cont'd)           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                     Destination IP address (Cont'd)           |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                       BGP Message Packet                      |
     |                                                               |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   If `type' is PROTOCOL_BGP4MP, `subtype' is BGP4MP_ENTRY, and Address
Family == IP (version 4)

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |            View #             |            Status             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Time Last Change                       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Address Family          |    SAFI       | Next-Hop-Len  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Next Hop Address                       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | Prefix Length |             Address Prefix [variable]         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Attribute Length        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      BGP Attribute [variable length]    			|
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   If `type' is PROTOCOL_BGP4MP, `subtype' is BGP4MP_ENTRY, and Address
Family == IP version 6

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |            View #             |            Status             |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Time Last Change                       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Address Family          |    SAFI       | Next-Hop-Len  |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Next Hop Address                       |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Next Hop Address (Cont'd)              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Next Hop Address (Cont'd)              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |                        Next Hop Address (Cont'd)              |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     | Prefix Length |             Address Prefix [variable]         |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |     Address Prefix (cont'd) [variable]        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |       Attribute Length        |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |      BGP Attribute [variable length]    			    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   	BGP4 Attribute must not contains MP_UNREACH_NLRI.  	If BGP Attribute
has MP_REACH_NLRI field, it must has 	zero length NLRI, e.g.,
MP_REACH_NLRI has only Address 	Family, SAFI and next-hop values.

   If `type' is PROTOCOL_BGP4MP and `subtype' is BGP4MP_SNAPSHOT,

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
     |           View #              |       File Name [variable]    |
     +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

   The file specified in "File Name" contains all routing entries,
which are in the format of "subtype == BGP4MP_ENTRY".

     Constants:
       /* type value */
       #define MSG_PROTOCOL_BGP4MP 16
       /* subtype value */
       #define BGP4MP_STATE_CHANGE 0
       #define BGP4MP_MESSAGE 1
       #define BGP4MP_ENTRY 2
       #define BGP4MP_SNAPSHOT 3


File: zebra.info,  Node: Command Index,  Next: VTY Key Index,  Prev: Packet Binary Dump Format,  Up: Top

Command Index
*************

* Menu:

* access-class ACCESS-LIST:              Basic Config Commands.
* access-list NAME deny IPV4-NETWORK:    IP Access List.
* access-list NAME permit IPV4-NETWORK:  IP Access List.
* aggregate-address NETWORK:             BGP network.
* area <0-4294967295> authentication:    OSPF area.
* area <0-4294967295> authentication message-digest: OSPF area.
* area <0-4294967295> export-list NAME:  OSPF area.
* area <0-4294967295> import-list NAME:  OSPF area.
* area <0-4294967295> range A.B.C.D/M:   OSPF area.
* area <0-4294967295> shortcut:          OSPF area.
* area <0-4294967295> stub:              OSPF area.
* area <0-4294967295> stub no-summary:   OSPF area.
* area <0-4294967295> virtual-link A.B.C.D: OSPF area.
* area A.B.C.D authentication:           OSPF area.
* area A.B.C.D authentication message-digest: OSPF area.
* area A.B.C.D default-cost <0-16777215>: OSPF area.
* area A.B.C.D export-list NAME:         OSPF area.
* area A.B.C.D import-list NAME:         OSPF area.
* area A.B.C.D range A.B.C.D/M:          OSPF area.
* area A.B.C.D range IPV4_PREFIX substitute IPV4_PREFIX: OSPF area.
* area A.B.C.D range IPV4_PREFIX suppress: OSPF area.
* area A.B.C.D shortcut:                 OSPF area.
* area A.B.C.D stub:                     OSPF area.
* area A.B.C.D stub no-summary:          OSPF area.
* area A.B.C.D virtual-link A.B.C.D:     OSPF area.
* auto-cost refrence-bandwidth <1-4294967>: OSPF router.
* bandwidth <1-10000000>:                Interface Commands.
* banner motd default:                   Basic Config Commands.
* bgp cluster-id A.B.C.D:                Route Reflector.
* bgp multiple-instance:                 Multiple instance.
* bgp router-id ROUTER-ID:               BGP router.
* clear ip bgp PEER:                     BGP terminal mode commands.
* clear ip bgp PEER soft in:             BGP terminal mode commands.
* clear ip prefix-list:                  Clear counter of ip prefix-list.
* clear ip prefix-list NAME:             Clear counter of ip prefix-list.
* clear ip prefix-list NAME A.B.C.D/M:   Clear counter of ip prefix-list.
* configure terminal:                    Basic Config Commands.
* debug event:                           BGP terminal mode commands.
* debug keepalive:                       BGP terminal mode commands.
* debug ospf ism:                        Debugging OSPF.
* debug ospf ism (status|events|timers): Debugging OSPF.
* debug ospf lsa:                        Debugging OSPF.
* debug ospf lsa (generate|flooding|refresh): Debugging OSPF.
* debug ospf nsm:                        Debugging OSPF.
* debug ospf nsm (status|events|timers): Debugging OSPF.
* debug ospf packet (hello|dd|ls-request|ls-update|ls-ack|all) (send|recv) [detail]: Debugging OSPF.
* debug ospf zebra:                      Debugging OSPF.
* debug ospf zebra (interface|redistribute): Debugging OSPF.
* debug rip events:                      RIP Debug Commands.
* debug rip packet:                      RIP Debug Commands.
* debug rip zebra:                       RIP Debug Commands.
* debug ripng events:                    ripngd Terminal Mode Commands.
* debug ripng packet:                    ripngd Terminal Mode Commands.
* debug ripng zebra:                     ripngd Terminal Mode Commands.
* debug update:                          BGP terminal mode commands.
* default-information originate <1>:     Redistribute routes to OSPF.
* default-information originate:         How to Announce RIP route.
* default-information originate always:  Redistribute routes to OSPF.
* default-information originate always metric <0-16777214>: Redistribute routes to OSPF.
* default-information originate always metric <0-16777214> metric-type (1|2): Redistribute routes to OSPF.
* default-information originate always metric <0-16777214> metric-type (1|2) route-map WORD: Redistribute routes to OSPF.
* default-information originate metric <0-16777214>: Redistribute routes to OSPF.
* default-information originate metric <0-16777214> metric-type (1|2): Redistribute routes to OSPF.
* default-information originate metric <0-16777214> metric-type (1|2) route-map WORD: Redistribute routes to OSPF.
* default-metric <0-16777214>:           Redistribute routes to OSPF.
* default-metric <1-16>:                 RIP Metric Manipulation.
* description DESCRIPTION ...:           Interface Commands.
* distance <1-255> <1>:                  Redistribute routes to OSPF.
* distance <1-255>:                      RIP distance.
* distance <1-255> A.B.C.D/M:            RIP distance.
* distance <1-255> A.B.C.D/M ACCESS-LIST: RIP distance.
* distance ospf (intra-area|inter-area|external) <1-255>: Redistribute routes to OSPF.
* distribute-list ACCESS_LIST (in|out) IFNAME: ripngd Filtering Commands.
* distribute-list ACCESS_LIST DIRECT IFNAME: Filtering RIP Routes.
* distribute-list NAME out (kernel|connected|static|rip|ospf: Redistribute routes to OSPF.
* distribute-list prefix PREFIX_LIST (in|out) IFNAME: Filtering RIP Routes.
* dump bgp all PATH:                     Dump BGP packet and table.
* dump bgp all PATH INTERVAL:            Dump BGP packet and table.
* dump bgp routes PATH:                  Dump BGP packet and table.
* dump bgp updates PATH:                 Dump BGP packet and table.
* dump bgp updates PATH INTERVAL:        Dump BGP packet and table.
* enable password PASSWORD:              Basic Config Commands.
* exec-timeout MINUTE:                   Basic Config Commands.
* exec-timeout MINUTE SECOND:            Basic Config Commands.
* flush_timer TIME:                      ripngd Configuration.
* hostname HOSTNAME:                     Basic Config Commands.
* interface IFNAME:                      Interface Commands.
* interface IFNAME area AREA:            OSPF6 router.
* ip address ADDRESS:                    Interface Commands.
* ip as-path access-list NAME TYPE AS_PATH: AS Path Access List.
* ip community-list NAME TYPE COMMUNITY: IP Community List.
* ip ospf authentication-key AUTH_KEY:   OSPF interface.
* ip ospf cost <1-65535>:                OSPF interface.
* ip ospf dead-interval <1-65535>:       OSPF interface.
* ip ospf hello-interval <1-65535>:      OSPF interface.
* ip ospf message-digest-key KEYID md5 KEY: OSPF interface.
* ip ospf network (broadcast|non-broadcast|point-to-multipoint|point-to-point): OSPF interface.
* ip ospf priority <0-255>:              OSPF interface.
* ip ospf retransmit-interval <1-65535>: OSPF interface.
* ip ospf transmit-delay:                OSPF interface.
* ip prefix-list NAME (permit|deny) PREFIX [le LEN] [ge LEN]: IP Prefix List.
* ip prefix-list NAME description DESC:  ip prefix-list description.
* ip prefix-list NAME seq NUMBER (permit|deny) PREFIX [le LEN] [ge LEN]: IP Prefix List.
* ip prefix-list sequence-number:        ip prefix-list sequential number control.
* ip rip authentication key-chain KEY-CHAIN: RIP Authentication.
* ip rip authentication mode md5:        RIP Authentication.
* ip rip authentication mode text:       RIP Authentication.
* ip rip authentication string STRING:   RIP Authentication.
* ip rip receive version VERSION:        RIP Configuration.
* ip rip send version VERSION:           RIP Configuration.
* ip route NETWORK GATEWAY:              Static Route Commands.
* ip split-horizon:                      RIP Configuration.
* ipv6 nd prefix-advertisement IPV6PREFIX: Router Advertisement.
* ipv6 nd send-ra:                       Router Advertisement.
* ipv6 ospf6 cost COST:                  OSPF6 interface.
* ipv6 ospf6 dead-interval DEADINTERVAL: OSPF6 interface.
* ipv6 ospf6 hello-interval HELLOINTERVAL: OSPF6 interface.
* ipv6 ospf6 priority PRIORITY:          OSPF6 interface.
* ipv6 ospf6 retransmit-interval RETRANSMITINTERVAL: OSPF6 interface.
* ipv6 ospf6 transmit-delay TRANSMITDELAY: OSPF6 interface.
* ipv6 route NETWORK GATEWAY:            Static Route Commands.
* line vty:                              Basic Config Commands.
* list:                                  Basic Config Commands.
* log file FILENAME:                     Basic Config Commands.
* log stdout:                            Basic Config Commands.
* log syslog:                            Basic Config Commands.
* match aspath AS_PATH:                  Route Map Match Command.
* match community COMMUNITY_LIST:        Route Map Match Command.
* match interface NAME:                  RIP route-map.
* match ip address <access-list>:        RIP route-map.
* match ip address ACCESS_LIST:          Route Map Match Command.
* match ip next-hop IPV4_ADDR:           Route Map Match Command.
* match ip next-hot A.B.C.D:             RIP route-map.
* match metric METRIC:                   Route Map Match Command.
* match metric N:                        RIP route-map.
* multicast:                             Interface Commands.
* neighbor A.B.C.D:                      RIP Configuration.
* neighbor PEER default-originate:       Peer configuration.
* neighbor PEER description ...:         Peer configuration.
* neighbor PEER distribute-list NAME [in|out]: Peer filtering.
* neighbor PEER dont-capability-negotiate: Multiple Protocol Extension for BGP.
* neighbor PEER ebgp-multihop:           Peer configuration.
* neighbor PEER filter-list NAME [in|out]: Peer filtering.
* neighbor PEER interface IFNAME:        Peer configuration.
* neighbor PEER maximum-prefix NUMBER:   Peer configuration.
* neighbor PEER next-hop-self:           Peer configuration.
* neighbor PEER override-capability:     Multiple Protocol Extension for BGP.
* neighbor PEER port PORT:               Peer configuration.
* neighbor PEER prefix-list NAME [in|out]: Peer filtering.
* neighbor PEER remote-as AS-NUMBER:     BGP peer.
* neighbor PEER route-map NAME [in|out]: Peer filtering.
* neighbor PEER route-reflector-client:  Route Reflector.
* neighbor PEER send-community:          Peer configuration.
* neighbor PEER shutdown:                Peer configuration.
* neighbor PEER strict-capability-match: Multiple Protocol Extension for BGP.
* neighbor PEER update-source:           Peer configuration.
* neighbor PEER version VERSION:         Peer configuration.
* neighbor PEER weight WEIGHT:           Peer configuration.
* network A.B.C.D/M area <0-4294967295>: OSPF router.
* network A.B.C.D/M area A.B.C.D:        OSPF router.
* network IFNAME <1>:                    ripngd Configuration.
* network IFNAME:                        RIP Configuration.
* network NETWORK <1>:                   BGP network.
* network NETWORK <2>:                   ripngd Configuration.
* network NETWORK:                       RIP Configuration.
* no aggregate-address NETWORK:          BGP network.
* no area <0-4294967295> authentication: OSPF area.
* no area <0-4294967295> export-list NAME: OSPF area.
* no area <0-4294967295> import-list NAME: OSPF area.
* no area <0-4294967295> range A.B.C.D/M: OSPF area.
* no area <0-4294967295> shortcut:       OSPF area.
* no area <0-4294967295> stub:           OSPF area.
* no area <0-4294967295> stub no-summary: OSPF area.
* no area <0-4294967295> virtual-link A.B.C.D: OSPF area.
* no area A.B.C.D authentication:        OSPF area.
* no area A.B.C.D default-cost <0-16777215>: OSPF area.
* no area A.B.C.D export-list NAME:      OSPF area.
* no area A.B.C.D import-list NAME:      OSPF area.
* no area A.B.C.D range A.B.C.D/M:       OSPF area.
* no area A.B.C.D range IPV4_PREFIX substitute IPV4_PREFIX: OSPF area.
* no area A.B.C.D range IPV4_PREFIX suppress: OSPF area.
* no area A.B.C.D shortcut:              OSPF area.
* no area A.B.C.D stub:                  OSPF area.
* no area A.B.C.D stub no-summary:       OSPF area.
* no area A.B.C.D virtual-link A.B.C.D:  OSPF area.
* no auto-cost refrence-bandwidth:       OSPF router.
* no bandwidth <1-10000000>:             Interface Commands.
* no banner motd:                        Basic Config Commands.
* no bgp multiple-instance:              Multiple instance.
* no debug event:                        BGP terminal mode commands.
* no debug keepalive:                    BGP terminal mode commands.
* no debug ospf ism:                     Debugging OSPF.
* no debug ospf ism (status|events|timers): Debugging OSPF.
* no debug ospf lsa:                     Debugging OSPF.
* no debug ospf lsa (generate|flooding|refresh): Debugging OSPF.
* no debug ospf nsm:                     Debugging OSPF.
* no debug ospf nsm (status|events|timers): Debugging OSPF.
* no debug ospf packet (hello|dd|ls-request|ls-update|ls-ack|all) (send|recv) [detail]: Debugging OSPF.
* no debug ospf zebra:                   Debugging OSPF.
* no debug ospf zebra (interface|redistribute): Debugging OSPF.
* no debug update:                       BGP terminal mode commands.
* no default-information originate:      Redistribute routes to OSPF.
* no default-metric:                     Redistribute routes to OSPF.
* no default-metric <1-16>:              RIP Metric Manipulation.
* no distance <1-255> <1>:               Redistribute routes to OSPF.
* no distance <1-255>:                   RIP distance.
* no distance <1-255> A.B.C.D/M:         RIP distance.
* no distance <1-255> A.B.C.D/M ACCESS-LIST: RIP distance.
* no distance ospf:                      Redistribute routes to OSPF.
* no distribute-list NAME out (kernel|connected|static|rip|ospf: Redistribute routes to OSPF.
* no exec-timeout:                       Basic Config Commands.
* no ip ospf authentication-key:         OSPF interface.
* no ip ospf cost:                       OSPF interface.
* no ip ospf dead-interval:              OSPF interface.
* no ip ospf hello-interval:             OSPF interface.
* no ip ospf message-digest-key:         OSPF interface.
* no ip ospf network:                    OSPF interface.
* no ip ospf priority:                   OSPF interface.
* no ip ospf retransmit interval:        OSPF interface.
* no ip ospf transmit-delay:             OSPF interface.
* no ip prefix-list NAME:                IP Prefix List.
* no ip prefix-list NAME description [DESC]: ip prefix-list description.
* no ip prefix-list sequence-number:     ip prefix-list sequential number control.
* no ip rip authentication key-chain KEY-CHAIN: RIP Authentication.
* no ip rip authentication mode md5:     RIP Authentication.
* no ip rip authentication mode text:    RIP Authentication.
* no ip rip authentication string STRING: RIP Authentication.
* no ip split-horizon:                   RIP Configuration.
* no log stdout:                         Basic Config Commands.
* no log syslog:                         Basic Config Commands.
* no multicast:                          Interface Commands.
* no neighbor A.B.C.D:                   RIP Configuration.
* no neighbor PEER default-originate:    Peer configuration.
* no neighbor PEER description ...:      Peer configuration.
* no neighbor PEER dont-capability-negotiate: Multiple Protocol Extension for BGP.
* no neighbor PEER ebgp-multihop:        Peer configuration.
* no neighbor PEER interface IFNAME:     Peer configuration.
* no neighbor PEER maximum-prefix NUMBER: Peer configuration.
* no neighbor PEER next-hop-self:        Peer configuration.
* no neighbor PEER override-capability:  Multiple Protocol Extension for BGP.
* no neighbor PEER route-reflector-client: Route Reflector.
* no neighbor PEER shutdown:             Peer configuration.
* no neighbor PEER strict-capability-match: Multiple Protocol Extension for BGP.
* no neighbor PEER update-source:        Peer configuration.
* no neighbor PEER weight WEIGHT:        Peer configuration.
* no network A.B.C.D/M area <0-4294967295>: OSPF router.
* no network A.B.C.D/M area A.B.C.D:     OSPF router.
* no network IFNAME:                     RIP Configuration.
* no network NETWORK <1>:                BGP network.
* no network NETWORK:                    RIP Configuration.
* no ospf abr-type TYPE:                 OSPF router.
* no ospf rfc1583compatibility:          OSPF router.
* no ospf router-id:                     OSPF router.
* no passive interface INTERFACE:        OSPF router.
* no passive-interface IFNAME:           RIP Configuration.
* no redistribute (kernel|connected|static|rip|bgp): Redistribute routes to OSPF.
* no redistribute bgp:                   How to Announce RIP route.
* no redistribute connected:             How to Announce RIP route.
* no redistribute kernel:                How to Announce RIP route.
* no redistribute ospf:                  How to Announce RIP route.
* no redistribute static:                How to Announce RIP route.
* no rouer rip:                          RIP Configuration.
* no route A.B.C.D/M:                    How to Announce RIP route.
* no router bgp AS-NUMBER:               BGP router.
* no router ospf:                        OSPF router.
* no router zebra:                       Redistribute routes to OSPF.
* no shutdown:                           Interface Commands.
* no smux peer OID:                      SMUX configuration.
* no smux peer OID PASSWORD:             SMUX configuration.
* no timers basic:                       RIP Timers.
* no timers spf:                         OSPF router.
* offset-list ACCESS-LIST (in|out):      RIP Metric Manipulation.
* offset-list ACCESS-LIST (in|out) IFNAME: RIP Metric Manipulation.
* ospf abr-type TYPE:                    OSPF router.
* ospf rfc1583compatibility:             OSPF router.
* ospf router-id A.B.C.D:                OSPF router.
* passive interface INTERFACE:           OSPF router.
* passive-interface IFNAME:              RIP Configuration.
* password PASSWORD:                     Basic Config Commands.
* redistribute (kernel|connected|static|rip|bgp): Redistribute routes to OSPF.
* redistribute (kernel|connected|static|rip|bgp) metric <0-16777214>: Redistribute routes to OSPF.
* redistribute (kernel|connected|static|rip|bgp) metric <0-16777214> route-map WORD: Redistribute routes to OSPF.
* redistribute (kernel|connected|static|rip|bgp) metric-type (1|2): Redistribute routes to OSPF.
* redistribute (kernel|connected|static|rip|bgp) metric-type (1|2) metric <0-16777214>: Redistribute routes to OSPF.
* redistribute (kernel|connected|static|rip|bgp) metric-type (1|2) metric <0-16777214> route-map WORD: Redistribute routes to OSPF.
* redistribute (kernel|connected|static|rip|bgp) metric-type (1|2) route-map WORD: Redistribute routes to OSPF.
* redistribute (kernel|connected|static|rip|bgp) ROUTE-MAP: Redistribute routes to OSPF.
* redistribute bgp:                      How to Announce RIP route.
* redistribute bgp metric <0-16>:        How to Announce RIP route.
* redistribute bgp route-map ROUTE-MAP:  How to Announce RIP route.
* redistribute connected <1>:            Redistribute to BGP.
* redistribute connected <2>:            Redistribute routes to OSPF6.
* redistribute connected:                How to Announce RIP route.
* redistribute connected metric <0-16>:  How to Announce RIP route.
* redistribute connected route-map ROUTE-MAP: How to Announce RIP route.
* redistribute kernel <1>:               Redistribute to BGP.
* redistribute kernel:                   How to Announce RIP route.
* redistribute kernel metric <0-16>:     How to Announce RIP route.
* redistribute kernel route-map ROUTE-MAP: How to Announce RIP route.
* redistribute ospf <1>:                 Redistribute to BGP.
* redistribute ospf:                     How to Announce RIP route.
* redistribute ospf metric <0-16>:       How to Announce RIP route.
* redistribute ospf route-map ROUTE-MAP: How to Announce RIP route.
* redistribute rip:                      Redistribute to BGP.
* redistribute ripng:                    Redistribute routes to OSPF6.
* redistribute static <1>:               Redistribute to BGP.
* redistribute static <2>:               Redistribute routes to OSPF6.
* redistribute static:                   How to Announce RIP route.
* redistribute static metric <0-16>:     How to Announce RIP route.
* redistribute static route-map ROUTE-MAP: How to Announce RIP route.
* refresh age-diff <0-10000>:            OSPF router.
* refresh group-limit <0-10000>:         OSPF router.
* refresh per-slice <0-10000>:           OSPF router.
* route A.B.C.D/M:                       How to Announce RIP route.
* route NETWORK:                         ripngd Configuration.
* route-map ROUTE-MAP-NAME permit PRIORITY: Route Map Command.
* router bgp AS-NUMBER <1>:              BGP instance and view.
* router bgp AS-NUMBER:                  BGP router.
* router bgp AS-NUMBER view NAME:        BGP instance and view.
* router ospf:                           OSPF router.
* router ospf6:                          OSPF6 router.
* router rip:                            RIP Configuration.
* router ripng:                          ripngd Configuration.
* router zebra <1>:                      Redistribute routes to OSPF.
* router zebra:                          ripngd Configuration.
* router-id A.B.C.D:                     OSPF6 router.
* service advanced-vty:                  Basic Config Commands.
* service password-encryption:           Basic Config Commands.
* service terminal-length <0-512>:       Basic Config Commands.
* set as-path prepend AS_PATH:           Route Map Set Command.
* set community COMMUNITY:               Route Map Set Command.
* set ip next-hop IPV4_ADDRESS:          Route Map Set Command.
* set ipv6 next-hop global IPV6_ADDRESS: Route Map Set Command.
* set ipv6 next-hop local IPV6_ADDRESS:  Route Map Set Command.
* set local-preference LOCAL_PREF:       Route Map Set Command.
* set metric <0-4294967295>:             RIP route-map.
* set metric METRIC:                     Route Map Set Command.
* set next-hop A.B.C.D:                  RIP route-map.
* set weight WEIGHT:                     Route Map Set Command.
* show debug:                            BGP terminal mode commands.
* show debugging ospf:                   Debugging OSPF.
* show debugging rip:                    RIP Debug Commands.
* show debugging ripng:                  ripngd Terminal Mode Commands.
* show interface:                        zebra Terminal Mode Commands.
* show ip bgp [NETWORK]:                 BGP terminal mode commands.
* show ip bgp neighbor [PEER]:           BGP terminal mode commands.
* show ip bgp regexp AS-REGEXP:          BGP terminal mode commands.
* show ip bgp summary:                   BGP terminal mode commands.
* show ip bgp view NAME:                 Viewing the view.
* show ip ospf:                          Showing OSPF information.
* show ip ospf database:                 Showing OSPF information.
* show ip ospf database (asbr-summary|external|network|router|summary): Showing OSPF information.
* show ip ospf database (asbr-summary|external|network|router|summary) adv-router ADV-ROUTER: Showing OSPF information.
* show ip ospf database (asbr-summary|external|network|router|summary) LINK-STATE-ID: Showing OSPF information.
* show ip ospf database (asbr-summary|external|network|router|summary) LINK-STATE-ID adv-router ADV-ROUTER: Showing OSPF information.
* show ip ospf database (asbr-summary|external|network|router|summary) LINK-STATE-ID self-originate: Showing OSPF information.
* show ip ospf database (asbr-summary|external|network|router|summary) self-originate: Showing OSPF information.
* show ip ospf database max-age:         Showing OSPF information.
* show ip ospf database self-originate:  Showing OSPF information.
* show ip ospf interface [INTERFACE]:    Showing OSPF information.
* show ip ospf neighbor:                 Showing OSPF information.
* show ip ospf neighbor detail:          Showing OSPF information.
* show ip ospf neighbor INTERFACE:       Showing OSPF information.
* show ip ospf neighbor INTERFACE detail: Showing OSPF information.
* show ip ospf refresher:                Showing OSPF information.
* show ip ospf route:                    Showing OSPF information.
* show ip prefix-list:                   Showing ip prefix-list.
* show ip prefix-list detail:            Showing ip prefix-list.
* show ip prefix-list detail NAME:       Showing ip prefix-list.
* show ip prefix-list NAME:              Showing ip prefix-list.
* show ip prefix-list NAME A.B.C.D/M:    Showing ip prefix-list.
* show ip prefix-list NAME A.B.C.D/M first-match: Showing ip prefix-list.
* show ip prefix-list NAME A.B.C.D/M longer: Showing ip prefix-list.
* show ip prefix-list NAME seq NUM:      Showing ip prefix-list.
* show ip prefix-list summary:           Showing ip prefix-list.
* show ip prefix-list summary NAME:      Showing ip prefix-list.
* show ip protocols:                     Show RIP Information.
* show ip rip:                           Show RIP Information.
* show ip ripng:                         ripngd Terminal Mode Commands.
* show ip route:                         zebra Terminal Mode Commands.
* show ipforward:                        zebra Terminal Mode Commands.
* show ipv6 ospf6 [INSTANCE_ID]:         Showing OSPF6 information.
* show ipv6 ospf6 database:              Showing OSPF6 information.
* show ipv6 ospf6 interface:             Showing OSPF6 information.
* show ipv6 ospf6 neighbor:              Showing OSPF6 information.
* show ipv6 ospf6 request-list A.B.C.D:  Showing OSPF6 information.
* show ipv6 route:                       zebra Terminal Mode Commands.
* show ipv6 route ospf6:                 Showing OSPF6 information.
* show ipv6forward:                      zebra Terminal Mode Commands.
* show version:                          Basic Config Commands.
* shutdown:                              Interface Commands.
* smux peer OID:                         SMUX configuration.
* smux peer OID PASSWORD:                SMUX configuration.
* table TABLENO:                         Static Route Commands.
* terminal length <0-512>:               Basic Config Commands.
* timers basic UPDATE TIMEOUT GARBAGE:   RIP Timers.
* timers spf <0-4294967295> <0-4294967295>: OSPF router.
* version VERSION:                       RIP Configuration.
* who:                                   Basic Config Commands.
* write file:                            Basic Config Commands.
* write terminal:                        Basic Config Commands.


File: zebra.info,  Node: VTY Key Index,  Prev: Command Index,  Up: Top

VTY Key Index
*************

* Menu:

* <DEL>:                                 CLI Editing Commands.
* <DOWN>:                                CLI Advanced Commands.
* <LEFT>:                                CLI Movement Commands.
* <RIGHT>:                               CLI Movement Commands.
* <TAB>:                                 CLI Advanced Commands.
* <UP>:                                  CLI Advanced Commands.
* ?:                                     CLI Advanced Commands.
* C-a:                                   CLI Movement Commands.
* C-b:                                   CLI Movement Commands.
* C-c:                                   CLI Advanced Commands.
* C-d:                                   CLI Editing Commands.
* C-e:                                   CLI Movement Commands.
* C-f:                                   CLI Movement Commands.
* C-h:                                   CLI Editing Commands.
* C-k:                                   CLI Editing Commands.
* C-n:                                   CLI Advanced Commands.
* C-p:                                   CLI Advanced Commands.
* C-t:                                   CLI Editing Commands.
* C-u:                                   CLI Editing Commands.
* C-w:                                   CLI Editing Commands.
* C-z:                                   CLI Advanced Commands.
* M-b:                                   CLI Movement Commands.
* M-d:                                   CLI Editing Commands.
* M-f:                                   CLI Movement Commands.


